ВАЖНО
"host.docker.internal"  - вместо хоста в докере вставить что бы из докера можно было обращаться к БД

пример
ENV POSTGRES_HOST="host.docker.internal"


инициализация алемпика
 alembic init -t async migrations
 alembic revision --autogenerate -m "First migration"
 alembic upgrade head

let’s create our first user, open python shell.
>>> from database import db
>>> db.init()
>>> from models import User
>>> import asyncio
>>> asyncio.run(User.create(full_name="John Doe"))


CREATE USER kts_user WITH PASSWORD 'kts_pass';
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO "kts_user";
CREATE DATABASE kts;

sudo systemctl stop postgresql   - остановить постргрес
sudo systemctl start postgresql

docker build -f dockerfile_backend -t cardholder .
docker build -f dockerfile_backend -t cardholder .
docker run -it -p 8000:8000 -e LOGGING__LEVEL=INFO -e POSTGRES__DB=kts -e POSTGRES__USER=kts_user -e POSTGRES__PASSWORD=kts_pass -e POSTGRES__HOST=localhost -e POSTGRES__PORT=5432 -e POSTGRES__DSN=postgres://${POSTGRES__USER}:${POSTGRES__PASSWORD}@${POSTGRES__HOST}:${POSTGRES__PORT}/${POSTGRES__DB} --rm --name ca cardholder
docker run ca
docker rm {name conteiner}
docker rm ca
docker start ca
docker stop ca

ИТОГО
docker build -f dockerfile_backend -t cardholder .
docker run -it -p 8000:8000 --rm --name ca cardholder
docker start ca
docker stop ca

docker run -it --rm --name ca cardholder

docker-compose up --build

docker exec -it backend_fast_api sh
psql -h "127.0.0.1" -U kts_user -d kts
COPY cards, card_transactions TO ‘db.csv’ DELIMITER ‘,’ CSV HEADER;

postgresql+asyncpg://kts_user:kts_pass@localhost:5432/kts
postgresql+asyncpg://kts_user:kts_pass@127.0.0.1:5432/kts

docker system prune -a

docker run -it -p 8000:8000 --network="host" --rm --name ca cardholder

git reset --hard HEAD


docker run -it -p 8000:8000 -e LOGGING__LEVEL=INFO -e POSTGRES__DB=kts -e POSTGRES__USER=kts_user -e POSTGRES__PASSWORD=kts_pass -e POSTGRES__HOST=localhost -e POSTGRES__PORT=5432 -e POSTGRES__DSN=postgres://${POSTGRES__USER}:${POSTGRES__PASSWORD}@${POSTGRES__HOST}:${POSTGRES__PORT}/${POSTGRES__DB} --rm --name ca cardholder
docker run -it -p 8000:8000 -e POSTGRES__DB=kts -e POSTGRES__USER=kts_user -e POSTGRES__PASSWORD=kts_pass  --rm --name ca cardholder

docker build -f dockerfile_backend -t cardholder .
docker run -it -p 8000:8000 -e POSTGRES__DB=kts -e POSTGRES__USER=kts_user -e POSTGRES__PASSWORD=kts_pass  --rm --name ca cardholder